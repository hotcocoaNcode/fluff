macro newLine {
    cout 10;
}

macro printString: int16 address {
    int16 iter = address;
    int8 temp = 0;
    address -> temp;
    loop {
        cout temp;
        iter = iter + 1;
        iter -> temp;
    }
    lif temp != 0;
}

macro printShort: int16 num { // In file macro test
    int16 lenpow10 .> 1;
    loop
        lenpow10 = lenpow10 * 10;
    lif lenpow10 < num;

    if lenpow10 > 1 { /* number is larger than 10, equivalent to while loop (handle 0 case) */
        loop
                /*     number mod (l^10)  / (l^10)/10     + char convert*/
            cout (num % (lenpow10)) / (lenpow10/10) + '0';
            lenpow10 = lenpow10 / 10;
        lif lenpow10 > 1;
    }
}

macro printByte: int8 num { // Multiple in file macros test
    int16 lenpow10 .> 1;
    loop
        lenpow10 = lenpow10 * 10;
    lif lenpow10 < num;

    if lenpow10 > 1 { /* number is larger than 10, equivalent to while loop (handle 0 case) */
        loop
                /*     number mod (l^10)  / (l^10)/10     + char convert*/
            cout (num % (lenpow10)) / (lenpow10/10) + '0';
            lenpow10 = lenpow10 / 10;
        lif lenpow10 > 1;
    }
}